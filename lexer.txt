INTTK int 1
MAINTK main 1
LPARENT ( 1
RPARENT ) 1
LBRACE { 1
INTTK int 2
IDENFR a1 2
ASSIGN = 2
INTCON 1 2
COMMA , 2
IDENFR a2 2
SEMICN ; 2
IDENFR a2 3
ASSIGN = 3
IDENFR a1 3
SEMICN ; 3
INTTK int 4
IDENFR temp 4
SEMICN ; 4
INTTK int 5
IDENFR n 5
COMMA , 5
IDENFR i 5
SEMICN ; 5
IDENFR n 6
ASSIGN = 6
GETINTTK getint 6
LPARENT ( 6
RPARENT ) 6
SEMICN ; 6
FORTK for 7
LPARENT ( 7
IDENFR i 7
ASSIGN = 7
IDENFR a1 7
MULT * 7
IDENFR a1 7
SEMICN ; 7
IDENFR i 7
LSS < 7
IDENFR n 7
PLUS + 7
INTCON 1 7
SEMICN ; 7
IDENFR i 7
ASSIGN = 7
IDENFR i 7
PLUS + 7
INTCON 1 7
RPARENT ) 7
LBRACE { 7
IDENFR temp 8
ASSIGN = 8
IDENFR a2 8
SEMICN ; 8
IDENFR a2 9
ASSIGN = 9
IDENFR a1 9
PLUS + 9
IDENFR a2 9
SEMICN ; 9
IDENFR a1 10
ASSIGN = 10
IDENFR temp 10
SEMICN ; 10
IFTK if 11
LPARENT ( 11
IDENFR i 11
MOD % 11
INTCON 2 11
EQL == 11
INTCON 1 11
RPARENT ) 11
LBRACE { 11
CONTINUETK continue 12
SEMICN ; 12
RBRACE } 13
PRINTFTK printf 14
LPARENT ( 14
STRCON "round %d: %d\n" 14
COMMA , 14
IDENFR i 14
COMMA , 14
IDENFR a1 14
RPARENT ) 14
SEMICN ; 14
IFTK if 15
LPARENT ( 15
IDENFR i 15
GRE > 15
INTCON 19 15
RPARENT ) 15
LBRACE { 15
BREAKTK break 16
SEMICN ; 16
RBRACE } 17
RBRACE } 18
RETURNTK return 19
INTCON 0 19
SEMICN ; 19
RBRACE } 20
