INTTK int 2
MAINTK main 2
LPARENT ( 2
RPARENT ) 2
LBRACE { 2
INTTK int 3
IDENFR a 3
ASSIGN = 3
INTCON 10 3
COMMA , 3
IDENFR b 3
ASSIGN = 3
INTCON 1 3
COMMA , 3
IDENFR c 3
ASSIGN = 3
INTCON 22 3
SEMICN ; 3
PRINTFTK printf 4
LPARENT ( 4
STRCON "aaaaaaaaaaaaa" 4
RPARENT ) 4
SEMICN ; 4
PRINTFTK printf 5
LPARENT ( 5
STRCON "ohhhhhh %d %d %d %d" 5
COMMA , 5
IDENFR a 5
COMMA , 5
IDENFR b 5
COMMA , 5
IDENFR a 5
PLUS + 5
INTCON 2 5
COMMA , 5
IDENFR c 5
RPARENT ) 5
SEMICN ; 5
INTTK int 6
IDENFR arr 6
LBRACK [ 6
INTCON 3 6
RBRACK ] 6
ASSIGN = 6
LBRACE { 6
INTCON 1 6
COMMA , 6
INTCON 2 6
COMMA , 6
INTCON 3 6
RBRACE } 6
SEMICN ; 6
PRINTFTK printf 7
LPARENT ( 7
STRCON "dudududu %d %d" 7
COMMA , 7
IDENFR arr 7
LBRACK [ 7
INTCON 0 7
RBRACK ] 7
RPARENT ) 7
SEMICN ; 7
PRINTFTK printf 8
LPARENT ( 8
STRCON "booom %d" 8
COMMA , 8
IDENFR a 8
COMMA , 8
IDENFR arr 8
LBRACK [ 8
INTCON 2 8
RBRACK ] 8
PLUS + 8
IDENFR c 8
MULT * 8
INTCON 4 8
RPARENT ) 8
SEMICN ; 8
PRINTFTK printf 9
LPARENT ( 9
STRCON "emm this is easy right?" 9
COMMA , 9
IDENFR a 9
COMMA , 9
IDENFR b 9
PLUS + 9
LPARENT ( 9
IDENFR c 9
MULT * 9
IDENFR arr 9
LBRACK [ 9
INTCON 2 9
RBRACK ] 9
RPARENT ) 9
MOD % 9
INTCON 6 9
RPARENT ) 9
SEMICN ; 9
RETURNTK return 10
INTCON 0 10
SEMICN ; 10
RBRACE } 11
